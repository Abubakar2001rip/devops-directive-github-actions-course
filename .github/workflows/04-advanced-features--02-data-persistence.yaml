name: Artifacts and Caching
on:
  workflow_dispatch:

jobs:
  # ──────────────────────────────────────────────
  # 1) Artifact round-trip
  # ──────────────────────────────────────────────
  job-artifact-producer:
    name: Produce artifact
    runs-on: ubuntu-24.04
    steps:
      - name: Create artifact file
        run: |
          echo "This will be stored as an artifact!" > artifact.txt
          echo "Generated by job-artifact-producer on $(date)" >> artifact.txt

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: example-artifact
          path: artifact.txt

  job-artifact-consumer:
    name: Consume artifact
    runs-on: ubuntu-24.04
    needs: job-artifact-producer
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: example-artifact

      - name: Cat artifact file
        run: cat artifact.txt

  # ──────────────────────────────────────────────
  # 2) Generic cache with actions/cache
  # ──────────────────────────────────────────────
  prime-cache:
    name: Prime demo cache
    runs-on: ubuntu-24.04
    steps:
      # Attempt to restore (misses on first run)
      - name: Restore cache
        id: demo-cache
        uses: actions/cache@v4
        with:
          path: demo-cache
          # For info on constructing an appropriate cache key see:
          # https://github.com/actions/cache?tab=readme-ov-file#creating-a-cache-key
          key: demo-cache-v1

      # Populate directory only on miss
      - name: Populate cache directory
        if: steps.demo-cache.outputs.cache-hit != 'true'
        run: |
          echo "Cache miss – generating contents"
          mkdir -p demo-cache
          date > demo-cache/timestamp.txt

      # Save cache only if we generated new content
      - name: Save cache
        if: steps.demo-cache.outputs.cache-hit != 'true'
        uses: actions/cache@v4
        with:
          path: demo-cache
          key: demo-cache-v1

  use-cache:
    name: Use demo cache
    needs: prime-cache
    runs-on: ubuntu-24.04
    steps:
      - name: Restore cache
        id: demo-cache
        uses: actions/cache@v4
        with:
          path: demo-cache
          key: demo-cache-v1

      - name: Verify cache status
        run: |
          echo "cache-hit? -> ${{ steps.demo-cache.outputs.cache-hit }}"
          cat demo-cache/timestamp.txt

  # ──────────────────────────────────────────────
  # 3) Cache via actions/setup-node
  # ──────────────────────────────────────────────
  node-cache:
    name: npm dependency cache (setup-node)
    runs-on: ubuntu-24.04
    steps:
      - name: Bootstrap tiny Node project
        run: |
          npm init -y
          npm pkg set "dependencies.left-pad"=1.3.0

      - name: Install Node and enable npm cache
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm # setup-node handles save/restore for you

      - name: Install deps (populates or reuses cache)
        run: npm ci --prefer-offline --no-audit

      - name: Show node_modules head
        run: ls -R node_modules | head
